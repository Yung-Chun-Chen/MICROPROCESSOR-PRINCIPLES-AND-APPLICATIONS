

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 06 19:59:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 02/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _LATC	set	3979
    52  0000                     _TRISC	set	3988
    53  0000                     _RCONbits	set	4048
    54  0000                     _PR2	set	4043
    55  0000                     _OSCCONbits	set	4051
    56  0000                     _T2CONbits	set	4042
    57  0000                     _CCP1CONbits	set	4029
    58  0000                     _CCPR1L	set	4030
    59  0000                     _INTCON2	set	4081
    60  0000                     _INTCON	set	4082
    61  0000                     _INTCONbits	set	4082
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  00012C                     __pcinit:
    67                           	callstack 0
    68  00012C                     start_initialization:
    69                           	callstack 0
    70  00012C                     __initialization:
    71                           	callstack 0
    72  00012C                     end_of_initialization:
    73                           	callstack 0
    74  00012C                     __end_of__initialization:
    75                           	callstack 0
    76  00012C  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  00012E  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  000130  0100               	movlb	0
    79  000132  EF76  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	callstack 0
    84  000001                     ??_Rotate:
    85  000001                     
    86                           ; 1 bytes @ 0x0
    87  000001                     	ds	2
    88  000003                     Rotate@i:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x2
    92  000003                     	ds	2
    93  000005                     Rotate@j:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x4
    97  000005                     	ds	2
    98  000007                     Rotate@k:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0x6
   102  000007                     	ds	2
   103  000009                     Rotate@i_269:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0x8
   107  000009                     	ds	2
   108  00000B                     
   109                           ; 1 bytes @ 0xA
   110 ;;
   111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   112 ;;
   113 ;; *************** function _main *****************
   114 ;; Defined at:
   115 ;;		line 93 in file "lab9-1.c"
   116 ;; Parameters:    Size  Location     Type
   117 ;;		None
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   129 ;;      Params:         0       0       0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0       0       0
   131 ;;      Temps:          0       0       0       0       0       0       0
   132 ;;      Totals:         0       0       0       0       0       0       0
   133 ;;Total ram usage:        0 bytes
   134 ;; Hardware stack levels required when called: 1
   135 ;; This function calls:
   136 ;;		Nothing
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143  0000EC                     __ptext0:
   144                           	callstack 0
   145  0000EC                     _main:
   146                           	callstack 30
   147  0000EC  84CA               	bsf	202,2,c	;volatile
   148  0000EE  50CA               	movf	202,w,c	;volatile
   149  0000F0  0BFC               	andlw	-4
   150  0000F2  0901               	iorlw	1
   151  0000F4  6ECA               	movwf	202,c	;volatile
   152  0000F6  50D3               	movf	211,w,c	;volatile
   153  0000F8  0B8F               	andlw	-113
   154  0000FA  0910               	iorlw	16
   155  0000FC  6ED3               	movwf	211,c	;volatile
   156  0000FE  50BD               	movf	189,w,c	;volatile
   157  000100  0BF0               	andlw	-16
   158  000102  090C               	iorlw	12
   159  000104  6EBD               	movwf	189,c	;volatile
   160  000106  0E00               	movlw	0
   161  000108  6E94               	movwf	148,c	;volatile
   162  00010A  0E00               	movlw	0
   163  00010C  6E8B               	movwf	139,c	;volatile
   164                           
   165                           ;lab9-1.c: 116:     PR2 = 0x9b;
   166  00010E  0E9B               	movlw	155
   167  000110  6ECB               	movwf	203,c	;volatile
   168  000112                     
   169                           ;lab9-1.c: 117:      RCONbits.IPEN = 1;
   170  000112  8ED0               	bsf	208,7,c	;volatile
   171                           
   172                           ;lab9-1.c: 118:     INTCON = 0b11010000;
   173  000114  0ED0               	movlw	208
   174  000116  6EF2               	movwf	242,c	;volatile
   175                           
   176                           ;lab9-1.c: 119:     INTCON2 = 0b01110001;
   177  000118  0E71               	movlw	113
   178  00011A  6EF1               	movwf	241,c	;volatile
   179                           
   180                           ;lab9-1.c: 129:     CCPR1L = 0x04;
   181  00011C  0E04               	movlw	4
   182  00011E  6EBE               	movwf	190,c	;volatile
   183                           
   184                           ;lab9-1.c: 130:     CCP1CONbits.DC1B = 0b00;
   185  000120  0ECF               	movlw	-49
   186  000122  16BD               	andwf	189,f,c	;volatile
   187  000124                     l43:
   188  000124  EF92  F000         	goto	l43
   189  000128  EF07  F000         	goto	start
   190  00012C                     __end_of_main:
   191                           	callstack 0
   192                           
   193 ;; *************** function _Rotate *****************
   194 ;; Defined at:
   195 ;;		line 72 in file "lab9-1.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;  k               2    6[COMRAM] int 
   200 ;;  j               2    4[COMRAM] int 
   201 ;;  i               2    8[COMRAM] int 
   202 ;;  i               2    2[COMRAM] int 
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   212 ;;      Params:         0       0       0       0       0       0       0
   213 ;;      Locals:         8       0       0       0       0       0       0
   214 ;;      Temps:          2       0       0       0       0       0       0
   215 ;;      Totals:        10       0       0       0       0       0       0
   216 ;;Total ram usage:       10 bytes
   217 ;; Hardware stack levels used: 1
   218 ;; This function calls:
   219 ;;		Nothing
   220 ;; This function is called by:
   221 ;;		Interrupt level 2
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	intcode
   226  000008                     __pintcode:
   227                           	callstack 0
   228  000008                     _Rotate:
   229                           	callstack 30
   230                           
   231                           ;incstack = 0
   232  000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   233  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   234                           
   235                           	psect	intcode_body
   236  000012                     __pintcode_body:
   237                           	callstack 30
   238  000012                     int_func:
   239                           	callstack 30
   240  000012  0006               	pop		; remove dummy address from shadow register refresh
   241  000014                     i2l27:
   242  000014  0E04               	movlw	4
   243  000016  6EBE               	movwf	190,c	;volatile
   244  000018  0ECF               	movlw	-49
   245  00001A  16BD               	andwf	189,f,c	;volatile
   246  00001C  0E00               	movlw	0
   247  00001E  6E04               	movwf	(Rotate@i+1)^0,c
   248  000020  0E00               	movlw	0
   249  000022  6E03               	movwf	Rotate@i^0,c
   250  000024                     i2l728:
   251  000024  0E00               	movlw	0
   252  000026  6E06               	movwf	(Rotate@j+1)^0,c
   253  000028  0E00               	movlw	0
   254  00002A  6E05               	movwf	Rotate@j^0,c
   255  00002C                     i2l734:
   256  00002C  0E01               	movlw	1
   257  00002E  6E01               	movwf	??_Rotate^0,c
   258  000030  38BD               	swapf	189,w,c	;volatile
   259  000032  0B03               	andlw	3
   260  000034  6E02               	movwf	(??_Rotate+1)^0,c
   261  000036  5001               	movf	??_Rotate^0,w,c
   262  000038  2602               	addwf	(??_Rotate+1)^0,f,c
   263  00003A  3A02               	swapf	(??_Rotate+1)^0,f,c
   264  00003C  50BD               	movf	189,w,c	;volatile
   265  00003E  1802               	xorwf	(??_Rotate+1)^0,w,c
   266  000040  0BCF               	andlw	-49
   267  000042  1802               	xorwf	(??_Rotate+1)^0,w,c
   268  000044  6EBD               	movwf	189,c	;volatile
   269  000046  0E00               	movlw	0
   270  000048  6E08               	movwf	(Rotate@k+1)^0,c
   271  00004A  0E00               	movlw	0
   272  00004C  6E07               	movwf	Rotate@k^0,c
   273  00004E                     i2l742:
   274  00004E  4A07               	infsnz	Rotate@k^0,f,c
   275  000050  2A08               	incf	(Rotate@k+1)^0,f,c
   276  000052  BE08               	btfsc	(Rotate@k+1)^0,7,c
   277  000054  EF35  F000         	goto	i2u1_41
   278  000058  5008               	movf	(Rotate@k+1)^0,w,c
   279  00005A  E109               	bnz	i2u1_40
   280  00005C  0E0A               	movlw	10
   281  00005E  5C07               	subwf	Rotate@k^0,w,c
   282  000060  A0D8               	btfss	status,0,c
   283  000062  EF35  F000         	goto	i2u1_41
   284  000066  EF37  F000         	goto	i2u1_40
   285  00006A                     i2u1_41:
   286  00006A  EF27  F000         	goto	i2l742
   287  00006E                     i2u1_40:
   288  00006E  4A05               	infsnz	Rotate@j^0,f,c
   289  000070  2A06               	incf	(Rotate@j+1)^0,f,c
   290  000072  BE06               	btfsc	(Rotate@j+1)^0,7,c
   291  000074  EF45  F000         	goto	i2u2_41
   292  000078  5006               	movf	(Rotate@j+1)^0,w,c
   293  00007A  E109               	bnz	i2u2_40
   294  00007C  0E04               	movlw	4
   295  00007E  5C05               	subwf	Rotate@j^0,w,c
   296  000080  A0D8               	btfss	status,0,c
   297  000082  EF45  F000         	goto	i2u2_41
   298  000086  EF47  F000         	goto	i2u2_40
   299  00008A                     i2u2_41:
   300  00008A  EF16  F000         	goto	i2l734
   301  00008E                     i2u2_40:
   302  00008E  2ABE               	incf	190,f,c	;volatile
   303  000090  0ECF               	movlw	-49
   304  000092  16BD               	andwf	189,f,c	;volatile
   305  000094  4A03               	infsnz	Rotate@i^0,f,c
   306  000096  2A04               	incf	(Rotate@i+1)^0,f,c
   307  000098  BE04               	btfsc	(Rotate@i+1)^0,7,c
   308  00009A  EF58  F000         	goto	i2u3_41
   309  00009E  5004               	movf	(Rotate@i+1)^0,w,c
   310  0000A0  E109               	bnz	i2u3_40
   311  0000A2  0E11               	movlw	17
   312  0000A4  5C03               	subwf	Rotate@i^0,w,c
   313  0000A6  A0D8               	btfss	status,0,c
   314  0000A8  EF58  F000         	goto	i2u3_41
   315  0000AC  EF5A  F000         	goto	i2u3_40
   316  0000B0                     i2u3_41:
   317  0000B0  EF12  F000         	goto	i2l728
   318  0000B4                     i2u3_40:
   319  0000B4  0E00               	movlw	0
   320  0000B6  6E0A               	movwf	(Rotate@i_269+1)^0,c
   321  0000B8  0E00               	movlw	0
   322  0000BA  6E09               	movwf	Rotate@i_269^0,c
   323  0000BC                     i2l764:
   324  0000BC  0E04               	movlw	4
   325  0000BE  6EBE               	movwf	190,c	;volatile
   326  0000C0  0ECF               	movlw	-49
   327  0000C2  16BD               	andwf	189,f,c	;volatile
   328  0000C4  4A09               	infsnz	Rotate@i_269^0,f,c
   329  0000C6  2A0A               	incf	(Rotate@i_269+1)^0,f,c
   330  0000C8  BE0A               	btfsc	(Rotate@i_269+1)^0,7,c
   331  0000CA  EF70  F000         	goto	i2u4_41
   332  0000CE  500A               	movf	(Rotate@i_269+1)^0,w,c
   333  0000D0  E109               	bnz	i2u4_40
   334  0000D2  0E32               	movlw	50
   335  0000D4  5C09               	subwf	Rotate@i_269^0,w,c
   336  0000D6  A0D8               	btfss	status,0,c
   337  0000D8  EF70  F000         	goto	i2u4_41
   338  0000DC  EF72  F000         	goto	i2u4_40
   339  0000E0                     i2u4_41:
   340  0000E0  EF5E  F000         	goto	i2l764
   341  0000E4                     i2u4_40:
   342  0000E4  EF0A  F000         	goto	i2l27
   343  0000E8  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344  0000EA  0011               	retfie		f
   345  0000EC                     __end_of_Rotate:
   346                           	callstack 0
   347  0000                     
   348                           	psect	rparam
   349  0000                     
   350                           	psect	temp
   351  00000B                     btemp:
   352                           	callstack 0
   353  00000B                     	ds	1
   354  0000                     int$flags	set	btemp
   355  0000                     wtemp8	set	btemp+1
   356  0000                     ttemp5	set	btemp+1
   357  0000                     ttemp6	set	btemp+4
   358  0000                     ttemp7	set	btemp+8
   359                           
   360                           	psect	idloc
   361                           
   362                           ;Config register IDLOC0 @ 0x200000
   363                           ;	unspecified, using default values
   364  200000                     	org	2097152
   365  200000  FF                 	db	255
   366                           
   367                           ;Config register IDLOC1 @ 0x200001
   368                           ;	unspecified, using default values
   369  200001                     	org	2097153
   370  200001  FF                 	db	255
   371                           
   372                           ;Config register IDLOC2 @ 0x200002
   373                           ;	unspecified, using default values
   374  200002                     	org	2097154
   375  200002  FF                 	db	255
   376                           
   377                           ;Config register IDLOC3 @ 0x200003
   378                           ;	unspecified, using default values
   379  200003                     	org	2097155
   380  200003  FF                 	db	255
   381                           
   382                           ;Config register IDLOC4 @ 0x200004
   383                           ;	unspecified, using default values
   384  200004                     	org	2097156
   385  200004  FF                 	db	255
   386                           
   387                           ;Config register IDLOC5 @ 0x200005
   388                           ;	unspecified, using default values
   389  200005                     	org	2097157
   390  200005  FF                 	db	255
   391                           
   392                           ;Config register IDLOC6 @ 0x200006
   393                           ;	unspecified, using default values
   394  200006                     	org	2097158
   395  200006  FF                 	db	255
   396                           
   397                           ;Config register IDLOC7 @ 0x200007
   398                           ;	unspecified, using default values
   399  200007                     	org	2097159
   400  200007  FF                 	db	255
   401                           
   402                           	psect	config
   403                           
   404                           ; Padding undefined space
   405  300000                     	org	3145728
   406  300000  FF                 	db	255
   407                           
   408                           ;Config register CONFIG1H @ 0x300001
   409                           ;	Oscillator Selection bits
   410                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   411                           ;	Fail-Safe Clock Monitor Enable bit
   412                           ;	FCMEN = 0x0, unprogrammed default
   413                           ;	Internal/External Oscillator Switchover bit
   414                           ;	IESO = 0x0, unprogrammed default
   415  300001                     	org	3145729
   416  300001  08                 	db	8
   417                           
   418                           ;Config register CONFIG2L @ 0x300002
   419                           ;	Power-up Timer Enable bit
   420                           ;	PWRT = OFF, PWRT disabled
   421                           ;	Brown-out Reset Enable bits
   422                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   423                           ;	Brown Out Reset Voltage bits
   424                           ;	BORV = 0x3, unprogrammed default
   425  300002                     	org	3145730
   426  300002  1B                 	db	27
   427                           
   428                           ;Config register CONFIG2H @ 0x300003
   429                           ;	Watchdog Timer Enable bit
   430                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   431                           ;	Watchdog Timer Postscale Select bits
   432                           ;	WDTPS = 0xF, unprogrammed default
   433  300003                     	org	3145731
   434  300003  1E                 	db	30
   435                           
   436                           ; Padding undefined space
   437  300004                     	org	3145732
   438  300004  FF                 	db	255
   439                           
   440                           ;Config register CONFIG3H @ 0x300005
   441                           ;	CCP2 MUX bit
   442                           ;	CCP2MX = 0x1, unprogrammed default
   443                           ;	PORTB A/D Enable bit
   444                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   445                           ;	Low-Power Timer1 Oscillator Enable bit
   446                           ;	LPT1OSC = 0x0, unprogrammed default
   447                           ;	MCLR Pin Enable bit
   448                           ;	MCLRE = 0x1, unprogrammed default
   449  300005                     	org	3145733
   450  300005  81                 	db	129
   451                           
   452                           ;Config register CONFIG4L @ 0x300006
   453                           ;	Stack Full/Underflow Reset Enable bit
   454                           ;	STVREN = 0x1, unprogrammed default
   455                           ;	Single-Supply ICSP Enable bit
   456                           ;	LVP = OFF, Single-Supply ICSP disabled
   457                           ;	Extended Instruction Set Enable bit
   458                           ;	XINST = 0x0, unprogrammed default
   459                           ;	Background Debugger Enable bit
   460                           ;	DEBUG = 0x1, unprogrammed default
   461  300006                     	org	3145734
   462  300006  81                 	db	129
   463                           
   464                           ; Padding undefined space
   465  300007                     	org	3145735
   466  300007  FF                 	db	255
   467                           
   468                           ;Config register CONFIG5L @ 0x300008
   469                           ;	unspecified, using default values
   470                           ;	Code Protection bit
   471                           ;	CP0 = 0x1, unprogrammed default
   472                           ;	Code Protection bit
   473                           ;	CP1 = 0x1, unprogrammed default
   474                           ;	Code Protection bit
   475                           ;	CP2 = 0x1, unprogrammed default
   476                           ;	Code Protection bit
   477                           ;	CP3 = 0x1, unprogrammed default
   478  300008                     	org	3145736
   479  300008  0F                 	db	15
   480                           
   481                           ;Config register CONFIG5H @ 0x300009
   482                           ;	Boot Block Code Protection bit
   483                           ;	CPB = 0x1, unprogrammed default
   484                           ;	Data EEPROM Code Protection bit
   485                           ;	CPD = OFF, Data EEPROM not code-protected
   486  300009                     	org	3145737
   487  300009  C0                 	db	192
   488                           
   489                           ;Config register CONFIG6L @ 0x30000A
   490                           ;	unspecified, using default values
   491                           ;	Write Protection bit
   492                           ;	WRT0 = 0x1, unprogrammed default
   493                           ;	Write Protection bit
   494                           ;	WRT1 = 0x1, unprogrammed default
   495                           ;	Write Protection bit
   496                           ;	WRT2 = 0x1, unprogrammed default
   497                           ;	Write Protection bit
   498                           ;	WRT3 = 0x1, unprogrammed default
   499  30000A                     	org	3145738
   500  30000A  0F                 	db	15
   501                           
   502                           ;Config register CONFIG6H @ 0x30000B
   503                           ;	unspecified, using default values
   504                           ;	Configuration Register Write Protection bit
   505                           ;	WRTC = 0x1, unprogrammed default
   506                           ;	Boot Block Write Protection bit
   507                           ;	WRTB = 0x1, unprogrammed default
   508                           ;	Data EEPROM Write Protection bit
   509                           ;	WRTD = 0x1, unprogrammed default
   510  30000B                     	org	3145739
   511  30000B  E0                 	db	224
   512                           
   513                           ;Config register CONFIG7L @ 0x30000C
   514                           ;	unspecified, using default values
   515                           ;	Table Read Protection bit
   516                           ;	EBTR0 = 0x1, unprogrammed default
   517                           ;	Table Read Protection bit
   518                           ;	EBTR1 = 0x1, unprogrammed default
   519                           ;	Table Read Protection bit
   520                           ;	EBTR2 = 0x1, unprogrammed default
   521                           ;	Table Read Protection bit
   522                           ;	EBTR3 = 0x1, unprogrammed default
   523  30000C                     	org	3145740
   524  30000C  0F                 	db	15
   525                           
   526                           ;Config register CONFIG7H @ 0x30000D
   527                           ;	unspecified, using default values
   528                           ;	Boot Block Table Read Protection bit
   529                           ;	EBTRB = 0x1, unprogrammed default
   530  30000D                     	org	3145741
   531  30000D  40                 	db	64
   532                           tosu	equ	0xFFF
   533                           tosh	equ	0xFFE
   534                           tosl	equ	0xFFD
   535                           stkptr	equ	0xFFC
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           pcl	equ	0xFF9
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           prodh	equ	0xFF4
   544                           prodl	equ	0xFF3
   545                           indf0	equ	0xFEF
   546                           postinc0	equ	0xFEE
   547                           postdec0	equ	0xFED
   548                           preinc0	equ	0xFEC
   549                           plusw0	equ	0xFEB
   550                           fsr0h	equ	0xFEA
   551                           fsr0l	equ	0xFE9
   552                           wreg	equ	0xFE8
   553                           indf1	equ	0xFE7
   554                           postinc1	equ	0xFE6
   555                           postdec1	equ	0xFE5
   556                           preinc1	equ	0xFE4
   557                           plusw1	equ	0xFE3
   558                           fsr1h	equ	0xFE2
   559                           fsr1l	equ	0xFE1
   560                           bsr	equ	0xFE0
   561                           indf2	equ	0xFDF
   562                           postinc2	equ	0xFDE
   563                           postdec2	equ	0xFDD
   564                           preinc2	equ	0xFDC
   565                           plusw2	equ	0xFDB
   566                           fsr2h	equ	0xFDA
   567                           fsr2l	equ	0xFD9
   568                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     10      10
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Rotate in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Rotate in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rotate in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rotate in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rotate in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rotate in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rotate in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Rotate                                              10    10      0     120
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Rotate (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      A       A       1        7.9%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               F4      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            F4      0       0      15        0.0%
BIGRAM             5F3      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 06 19:59:12 2021

                     l43 0124                       l44 0124                      l770 00EC  
                    l772 00EE                      l774 0112                      _PR2 000FCB  
                   _LATC 000F8B                     i2l27 0014                     _main 00EC  
                   btemp 000B                     start 000E             ___param_bank 000000  
                  ?_main 0001                    i2l722 0014                    i2l750 008E  
                  i2l742 004E                    i2l734 002C                    i2l752 0090  
                  i2l744 0052                    i2l736 0046                    i2l728 0024  
                  i2l754 0094                    i2l746 006E                    i2l764 00BC  
                  i2l756 0098                    i2l748 0072                    i2l766 00C4  
                  i2l758 00B4                    i2l768 00C8                    _TRISC 000F94  
                  ttemp5 000C                    ttemp6 000F                    ttemp7 0013  
                  status 000FD8                    wtemp8 000C          __initialization 012C  
           __end_of_main 012C                   ??_main 000B            __activetblptr 000000  
                 _CCPR1L 000FBE                   _INTCON 000FF2                   i2u1_40 006E  
                 i2u1_41 006A                   i2u2_40 008E                   i2u2_41 008A  
                 i2u3_40 00B4                   i2u3_41 00B0                   i2u4_40 00E4  
                 i2u4_41 00E0                   _Rotate 0008                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 012C            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?_Rotate 0001                  _INTCON2 000FF1  
                __Hparam 0000                  __Lparam 0000          __size_of_Rotate 00E4  
                Rotate@i 0003                  Rotate@j 0005                  Rotate@k 0007  
                __pcinit 012C                  __ramtop 0600                  __ptext0 00EC  
              _T2CONbits 000FCA           __pintcode_body 0012     end_of_initialization 012C  
                int_func 0012              Rotate@i_269 0009              _CCP1CONbits 000FBD  
         __end_of_Rotate 00EC      start_initialization 012C                 ??_Rotate 0001  
              __pintcode 0008                 _RCONbits 000FD0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0040                 isa$xinst 000000  
               int$flags 000B               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3  
